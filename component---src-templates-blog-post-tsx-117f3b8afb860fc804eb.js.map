{"version":3,"file":"component---src-templates-blog-post-tsx-117f3b8afb860fc804eb.js","mappings":"mJAwGA,IA/EA,SAAYA,GAME,IAND,YACXC,EAAW,KACXC,EAAO,UAAS,KAChBC,EAAO,GAAE,SACTC,EAAW,GAAE,MACbC,GACSL,EACT,MAAM,KAAEM,IAASC,EAAAA,EAAAA,gBAAe,YAc1BC,EAAkBP,GAAeK,EAAKG,aAAaR,YAEnDS,EAAyB,CAC7B,CACEC,KAAM,cACNC,QAASJ,GAEX,CACEK,SAAU,WACVD,QAASP,GAEX,CACEQ,SAAU,iBACVD,QAASJ,GAEX,CACEK,SAAU,UACVD,QAAS,WAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,QAASN,EAAKG,aAAaK,QAE7B,CACEH,KAAM,gBACNC,QAASP,GAEX,CACEM,KAAM,sBACNC,QAASJ,IAIPO,EAAeX,EAASY,OAAS,EACnC,CACE,CACEL,KAAM,WACNC,QAASR,EAASa,KAAK,QAG3B,GAEJ,OACEC,EAAAA,EAAAA,GAACC,EAAAA,EAAM,CACLC,eAAgB,CACdlB,QAEFG,MAAOA,EACPgB,cAAe,QAAQf,EAAKG,aAAaJ,QACzCF,KAAI,GAAAmB,OAAMZ,EAAgBK,GAAYQ,EAAAA,EAAAA,GAAKpB,KAGjD,C,yHCpCA,MAAMqB,EAAQ,aAqBd,MA1EA,WACI,OACIN,EAAAA,EAAAA,GAACO,EAAAA,YAAW,CACRC,MAAOF,EACPG,OAASC,IACL,MAAM,OAAEd,EAAM,OAAEe,GAAWD,EAAKtB,KAAKG,aACrC,OACIS,EAAAA,EAAAA,GAAA,OACIY,MAAO,CACHC,QAAS,OACTC,WAAY,YAGhBd,EAAAA,EAAAA,GAACe,EAAAA,EAAK,CACFH,MAAO,CACHI,YAAa,SACbC,aAAc,EACdC,SAAU,GACVC,aAAc,QAElBC,SAAU,CACND,aAAc,OAElBE,MAAOX,EAAKY,OAAOC,gBAAgBF,MACnCG,IAAK5B,KAeTI,EAAAA,EAAAA,GAAA,SAAG,eACYA,EAAAA,EAAAA,GAAA,cAASJ,GACnB,KACDI,EAAAA,EAAAA,GAAA,KAAGyB,KAAM,qBAAqBd,EAAOe,UAAU,uCAS3E,E,oBC3DmC,IAE7BC,EAAgB,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,MAAAC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAA,IAAAI,EAAAL,EAAAM,UA6HnB,OA7HmBD,EAWpBE,kBAAA,WACE,GAAsB,oBAAXC,OAAwB,CAEjC,IADeC,EAAQ,MACvB,CAAW,CACTC,GAAI,aACJC,MAAO,oCACPC,OAAQ,2BACRjB,OAAQ,YACRkB,YAAa,UACbvD,KAAM,CAAC,OAAQ,QAEfwD,SAAU,4BACVC,SAAS,EACTC,UAAU,EAEVC,UAAW,CACTC,QAAS,+CACTC,QAAO,+CACPC,QAAO,+CACPC,QAAO,+CACPC,QAAO,+CACPC,QAAO,+CACPC,QAAO,+CACPC,QAAO,+CACPC,QAAO,+CACPC,OAAM,+CACNC,QAAO,+CACPC,OAAM,+CACNC,QAAO,+CACPC,QAAO,+CACPC,QAAO,+CACPC,QAAO,+CACPC,QAAO,+CACPC,QAAO,+CACPC,QAAO,+CACPC,QAAO,+CACPC,QAAO,iDAGb,CACF,EAACjC,EAEDvB,OAAA,WACE,MAAMyD,EAAOC,KAAKC,MAAM1D,KAAK2D,eACvBC,EAAYH,KAAKC,MAAM1D,KAAKtB,KAAKG,aAAaJ,OAC9C,SAAEoF,EAAQ,KAAEC,GAASL,KAAKC,MAAMK,YAEtC,OACEzE,EAAAA,EAAAA,GAAA,gBACEA,EAAAA,EAAAA,GAAC0E,EAAAA,EAAM,CAACC,SAAUR,KAAKC,MAAMO,SAAUxF,MAAOmF,IAC5CtE,EAAAA,EAAAA,GAAC4E,EAAAA,EAAG,CACFzF,MAAO+E,EAAKW,YAAY1F,MACxBJ,YAAamF,EAAKW,YAAY9F,aAAemF,EAAKY,WAEpD9E,EAAAA,EAAAA,GAAA,UAAKkE,EAAKW,YAAY1F,QACtBa,EAAAA,EAAAA,GAAA,KACEY,MAAO,CAELC,QAAS,UAGVqD,EAAKW,YAAYE,OAEpB/E,EAAAA,EAAAA,GAAA,OAAKgF,wBAAyB,CAAEC,OAAQf,EAAKgB,SAC7ClF,EAAAA,EAAAA,GAAA,MACEY,MAAO,CACLuE,OAAQ,aAGZnF,EAAAA,EAAAA,GAAA,OACEoF,GAAIlB,EAAKmB,OAAOC,KAChBC,UAAU,qBACV,kBAAiBrB,EAAKW,YAAY1F,MAClCyB,MAAO,CACL4E,UAAW,QACXC,WAAY,MAGdzF,EAAAA,EAAAA,GAAA,MAAIuF,UAAU,uBAAsB,SACpCvF,EAAAA,EAAAA,GAAA,KAAGuF,UAAU,+BAEfvF,EAAAA,EAAAA,GAAC0F,EAAG,OACJ1F,EAAAA,EAAAA,GAAA,MACEY,MAAO,CACLC,QAAS,OACT8E,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,KAGX9F,EAAAA,EAAAA,GAAA,UACGuE,IACCvE,EAAAA,EAAAA,GAAC+F,EAAAA,KAAI,CAACC,GAAIzB,EAASc,OAAOC,KAAMW,IAAI,QAAO,KACtC1B,EAASM,YAAY1F,SAI9Ba,EAAAA,EAAAA,GAAA,UACGwE,IACCxE,EAAAA,EAAAA,GAAC+F,EAAAA,KAAI,CAACC,GAAIxB,EAAKa,OAAOC,KAAMW,IAAI,QAC7BzB,EAAKK,YAAY1F,MAAM,SAKhCa,EAAAA,EAAAA,GAAA,OAAKoF,GAAG,YAAYG,UAAU,2BAEhCvF,EAAAA,EAAAA,GAAA,OAAKuF,UAAU,YACbvF,EAAAA,EAAAA,GAAA,UAAI,OACJA,EAAAA,EAAAA,GAAA,OAAKgF,wBAAyB,CAAEC,OAAQf,EAAKgC,oBAIrD,EAACvE,CAAA,CA7HmB,CAASwE,EAAAA,WAgI/B,O","sources":["webpack://blog-v5/./src/components/seo.tsx","webpack://blog-v5/./src/components/bio.tsx","webpack://blog-v5/./src/templates/blogPost.tsx"],"sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\ntype MetaTag = {\n  name?: string\n  property?: string\n  content: string\n}\n\ninterface SEOProps {\n  description?: string\n  lang?: string\n  meta?: MetaTag[]\n  keywords?: string[]\n  title: string\n}\n\nfunction SEO({\n  description,\n  lang = \"zh-Hans\",\n  meta = [],\n  keywords = [],\n  title,\n}: SEOProps) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  const defaultMeta: MetaTag[] = [\n    {\n      name: `description`,\n      content: metaDescription,\n    },\n    {\n      property: `og:title`,\n      content: title,\n    },\n    {\n      property: `og:description`,\n      content: metaDescription,\n    },\n    {\n      property: `og:type`,\n      content: `website`,\n    },\n    {\n      name: `twitter:card`,\n      content: `summary`,\n    },\n    {\n      name: `twitter:creator`,\n      content: site.siteMetadata.author,\n    },\n    {\n      name: `twitter:title`,\n      content: title,\n    },\n    {\n      name: `twitter:description`,\n      content: metaDescription,\n    },\n  ]\n\n  const keywordsMeta = keywords.length > 0\n    ? [\n        {\n          name: `keywords`,\n          content: keywords.join(`, `),\n        },\n      ]\n    : []\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[...defaultMeta, ...keywordsMeta, ...meta]}\n    />\n  )\n}\n\nexport default SEO\n","/**\n * Bio component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\n// import { rhythm } from \"../utils/typography\"\n\nfunction Bio() {\n    return (\n        <StaticQuery\n            query={bioQuery}\n            render={(data) => {\n                const { author, social } = data.site.siteMetadata\n                return (\n                    <div\n                        style={{\n                            display: `flex`,\n                            alignItems: \"center\",\n                        }}\n                    >\n                        <Image\n                            style={{\n                                marginRight: \"0.5rem\",\n                                marginBottom: 0,\n                                minWidth: 50,\n                                borderRadius: `100%`,\n                            }}\n                            imgStyle={{\n                                borderRadius: `50%`,\n                            }}\n                            fixed={data.avatar.childImageSharp.fixed}\n                            alt={author}\n                        />\n                        {/*<GatsbyImage*/}\n                        {/*  style={{*/}\n                        {/*    marginRight: \"0.5rem\",*/}\n                        {/*    marginBottom: 0,*/}\n                        {/*    minWidth: 50,*/}\n                        {/*    borderRadius: `100%`,*/}\n                        {/*  }}*/}\n                        {/*  imgStyle={{*/}\n                        {/*    borderRadius: `50%`,*/}\n                        {/*  }}*/}\n                        {/*  image={data.avatar.childImageSharp.gatsbyImageData}*/}\n                        {/*  alt={author}*/}\n                        {/*/>*/}\n                        <p>\n                            Written by <strong>{author}</strong>\n                            {` `}\n                            <a href={`http://github.com/${social.github}`}>\n                                You should follow him on Github\n                            </a>\n                        </p>\n                    </div>\n                )\n            }}\n        />\n    )\n}\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 50, height: 50) {\n          ...GatsbyImageSharpFixed\n        }\n        #        gatsbyImageData(layout: FIXED, width: 50, height: 50, formats: [JPG])\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          github\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n","import 'katex/dist/katex.min.css'\nimport React from \"react\"\nimport { Link, graphql, PageProps } from \"gatsby\"\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass BlogPostTemplate extends React.Component<\n  PageProps<\n    {\n      site: any\n      markdownRemark: any\n      data: any\n      location: any\n    },\n    any\n  >\n> {\n  componentDidMount() {\n    if (typeof window !== \"undefined\") {\n      const Valine = require(\"valine\")\n      new Valine({\n        el: \"#vcomments\",\n        appId: \"j3u9skdrWTJv9cBT2jUupUIy-gzGzoHsz\",\n        appKey: \"ez6rm3n4MHxTJbhX4bkYQrdB\",\n        avatar: \"monsterid\",\n        placeholder: \"说点什么...\",\n        meta: [\"nick\", \"mail\"],\n        // 设置Bilibili表情包地址\n        emojiCDN: \"//i0.hdslb.com/bfs/emote/\",\n        visitor: true, // 阅读量统计\n        enableQQ: true,\n        // 表情title和图片映射\n        emojiMaps: {\n          tv_doge: \"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png\",\n          tv_亲亲: \"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png\",\n          tv_偷笑: \"bb690d4107620f1c15cff29509db529a73aee261.png\",\n          tv_再见: \"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png\",\n          tv_冷漠: \"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png\",\n          tv_发怒: \"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png\",\n          tv_发财: \"34db290afd2963723c6eb3c4560667db7253a21a.png\",\n          tv_可爱: \"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png\",\n          tv_吐血: \"09dd16a7aa59b77baa1155d47484409624470c77.png\",\n          tv_呆: \"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png\",\n          tv_呕吐: \"9f996894a39e282ccf5e66856af49483f81870f3.png\",\n          tv_困: \"241ee304e44c0af029adceb294399391e4737ef2.png\",\n          tv_坏笑: \"1f0b87f731a671079842116e0991c91c2c88645a.png\",\n          tv_大佬: \"093c1e2c490161aca397afc45573c877cdead616.png\",\n          tv_大哭: \"23269aeb35f99daee28dda129676f6e9ea87934f.png\",\n          tv_委屈: \"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png\",\n          tv_害羞: \"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png\",\n          tv_尴尬: \"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png\",\n          tv_微笑: \"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png\",\n          tv_思考: \"90cf159733e558137ed20aa04d09964436f618a1.png\",\n          tv_惊吓: \"0d15c7e2ee58e935adc6a7193ee042388adc22af.png\",\n        },\n      })\n    }\n  }\n\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <article>\n        <Layout location={this.props.location} title={siteTitle}>\n          <SEO\n            title={post.frontmatter.title}\n            description={post.frontmatter.description || post.excerpt}\n          />\n          <h1>{post.frontmatter.title}</h1>\n          <p\n            style={{\n              // ...scale(-1 / 5),\n              display: `block`,\n            }}\n          >\n            {post.frontmatter.date}\n          </p>\n          <div dangerouslySetInnerHTML={{ __html: post.html }} />\n          <hr\n            style={{\n              margin: \"2rem 0\",\n            }}\n          />\n          <div\n            id={post.fields.slug}\n            className=\"leancloud_visitors\"\n            data-flag-title={post.frontmatter.title}\n            style={{\n              textAlign: \"right\",\n              marginTop: -10,\n            }}\n          >\n            <em className=\"post-meta-item-text\">阅读量 </em>\n            <i className=\"leancloud-visitors-count\"></i>\n          </div>\n          <Bio />\n          <ul\n            style={{\n              display: `flex`,\n              flexWrap: `wrap`,\n              justifyContent: `space-between`,\n              listStyle: `none`,\n              padding: 0,\n            }}\n          >\n            <li>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </ul>\n          <div id=\"vcomments\" className=\"blog-post-comments v\" />\n        </Layout>\n        <div className=\"catalog\">\n          <h3>目录</h3>\n          <div dangerouslySetInnerHTML={{ __html: post.tableOfContents }}></div>\n        </div>\n      </article>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      fields {\n        slug\n      }\n      tableOfContents\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n      wordCount {\n        words\n        paragraphs\n        sentences\n      }\n    }\n  }\n`\n"],"names":["_ref","description","lang","meta","keywords","title","site","useStaticQuery","metaDescription","siteMetadata","defaultMeta","name","content","property","author","keywordsMeta","length","join","___EmotionJSX","Helmet","htmlAttributes","titleTemplate","concat","_toConsumableArray","bioQuery","StaticQuery","query","render","data","social","style","display","alignItems","Image","marginRight","marginBottom","minWidth","borderRadius","imgStyle","fixed","avatar","childImageSharp","alt","href","github","BlogPostTemplate","_React$Component","apply","arguments","_inheritsLoose","_proto","prototype","componentDidMount","window","require","el","appId","appKey","placeholder","emojiCDN","visitor","enableQQ","emojiMaps","tv_doge","tv_亲亲","tv_偷笑","tv_再见","tv_冷漠","tv_发怒","tv_发财","tv_可爱","tv_吐血","tv_呆","tv_呕吐","tv_困","tv_坏笑","tv_大佬","tv_大哭","tv_委屈","tv_害羞","tv_尴尬","tv_微笑","tv_思考","tv_惊吓","post","this","props","markdownRemark","siteTitle","previous","next","pageContext","Layout","location","SEO","frontmatter","excerpt","date","dangerouslySetInnerHTML","__html","html","margin","id","fields","slug","className","textAlign","marginTop","Bio","flexWrap","justifyContent","listStyle","padding","Link","to","rel","tableOfContents","React"],"sourceRoot":""}