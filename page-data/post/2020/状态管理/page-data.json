{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/post/2020/状态管理/","result":{"data":{"site":{"siteMetadata":{"title":"一席之地","author":"xi ming"}},"markdownRemark":{"id":"bd3dbb60-3d2c-5500-87bb-c3d40353a0d3","excerpt":"swr https://github.com/zeit/swr 数据更新上比较麻烦 https://stook-cn.now.sh/docs/rest/share-state 使用rest范式约束后端来达到同样的目的 不需要ssr，没有路由诉求 stream return stream Type Inference…","html":"<p>swr</p>\n<p><a href=\"https://github.com/zeit/swr\">https://github.com/zeit/swr</a></p>\n<p>数据更新上比较麻烦</p>\n<p><a href=\"https://stook-cn.now.sh/docs/rest/share-state\">https://stook-cn.now.sh/docs/rest/share-state</a></p>\n<p>使用rest范式约束后端来达到同样的目的</p>\n<p>不需要ssr，没有路由诉求</p>\n<p>stream</p>\n<p>return stream</p>\n<ul>\n<li>Type Inference 类型推断</li>\n<li>Framework extensions are fully typed 框架扩展是完全类型化的</li>\n<li>The initial state is fully typed 初始状态是完全类型化的</li>\n<li>Jump to definition works seamlessly 跳转到定义工作无缝</li>\n</ul>\n<p>状态有几种</p>\n<ul>\n<li>纯静态的</li>\n<li>组件内部的</li>\n<li>从数据源中获取的，而且组件生命周期内只需要获取一次</li>\n<li>需要进行动态管理的，比如列表数据中某一项更新</li>\n</ul>\n<p>从整个架构上看，希望所有的东西都是可插拔的，业务高内聚的，也就是插件式的，整个分形，所以状态也要这样。</p>\n<p>我们需要在最上层使用统一的架构来处理相关依赖</p>\n<p>app.config.js</p>\n<p>业务少写代码主要集中在几个地方一个是在状态管理的时候，一个是在发请求的时候，</p>\n<h2 id=\"rsjscore\" style=\"position:relative;\">@rsjs/core<a href=\"#rsjscore\" aria-label=\"rsjscore permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h2>\n<p><a href=\"https://www.npmjs.com/package/@rsjs/core\"><img src=\"https://xming-images.oss-cn-beijing.aliyuncs.com/md/1585980520898-672456c0f6ca909cbbd49e9035e80d01.svg\" alt=\"Version\"></a></p>\n<ul>\n<li><a href=\"#introduction-wave\">Introduction 👋</a></li>\n<li><a href=\"#installation-cd\">Installation 💿</a></li>\n<li><a href=\"#everyday-usage-sunglasses\">Everyday Usage 😎</a>\n<ul>\n<li><a href=\"#creating-global-stores\">Creating global stores</a></li>\n<li><a href=\"#creating-reactive-views\">Creating reactive views</a></li>\n<li><a href=\"#creating-local-stores\">Creating local stores</a></li>\n</ul>\n</li>\n<li><a href=\"#advanced-usage-nerd_face\">Advanced Usage :nerd_face:</a>\n<ul>\n<li><a href=\"#adding-side-effects\">Adding side effects</a></li>\n</ul>\n</li>\n<li><a href=\"#api-summary-book\">API Summary 📖</a>\n<ul>\n<li><a href=\"#storeobj\">store(obj)</a></li>\n<li><a href=\"#viewcomp\">view(Comp)</a></li>\n<li><a href=\"#batchfn\">batch(fn)</a></li>\n<li><a href=\"#autoeffectfn\">autoEffect(fn)</a></li>\n<li><a href=\"#cleareffectfn\">clearEffect(fn)</a></li>\n</ul>\n</li>\n<li><a href=\"#examples-with-live-demos-tv\">Examples with live demos 📺</a></li>\n<li><a href=\"#articles-loudspeaker\">Articles 📢</a></li>\n<li><a href=\"#performance-rocket\">Performance 🚀</a></li>\n<li><a href=\"#platform-support-computer\">Platform support 💻</a></li>\n</ul>\n<h2 id=\"introduction-\" style=\"position:relative;\">Introduction 👋<a href=\"#introduction-\" aria-label=\"introduction  permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h2>\n<p>一个好的状态管理工具至少有以下几个必要的特性</p>\n<ul>\n<li>更符合人类直觉认识</li>\n<li>框架扩展是完全类型化的</li>\n<li>自动类型推断，且初始状态是完全类型化的</li>\n<li>无缝跳转到定义</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsxharmony\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsxharmony line-numbers\"><code class=\"language-jsxharmony\">/*\n最简单的 demo\n*/\nimport React from &#39;react&#39;;\nimport { useObserverState, view } from &#39;@rsjs/core&#39;;\n\nexport default view(() =&gt; {\n    const counter = useObserverState({\n      num: 0,\n      increment: () =&gt; counter.num++\n    });\n    return &lt;button onClick={counter.increment}&gt;{counter.num}&lt;/button&gt;\n});</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>点击这里查看详细Demo <a href=\"https://codesandbox.io/s/github/RisingStack/react-easy-state/tree/master/examples/todo-mvc?module=%2Fsrc%2FtodosStore.js\">TodoMVC codesandbox</a></p>\n<h2 id=\"installation-\" style=\"position:relative;\">Installation 💿<a href=\"#installation-\" aria-label=\"installation  permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h2>\n<p><code class=\"language-text\">npm install @rsjs/core</code></p>\n<details>\n<summary><strong>Setting up a quick project</strong></summary>\n<p></p>\n<p>@rsjs/core不需要额外的配置就支持 <a href=\"https://github.com/facebookincubator/create-react-app\">Create React App</a>，和react-native</p>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shellscript line-numbers\"><code class=\"language-shellscript\">npx create-react-app my-app\ncd my-app\nnpm install @rsjs/core\nnpm run start</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p><em>npx需要npm 5.2+以上版本</em></p>\n</details>\n<h2 id=\"usage-\" style=\"position:relative;\">Usage 😎<a href=\"#usage-\" aria-label=\"usage  permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h2>\n<h3 id=\"创建service\" style=\"position:relative;\">创建service<a href=\"#%E5%88%9B%E5%BB%BAservice\" aria-label=\"创建service permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h3>\n<p>CountService</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-typescript line-numbers\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Service<span class=\"token punctuation\">,</span> Injectable <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@rsjs/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token decorator\"><span class=\"token at operator\">@</span><span class=\"token function\">Injectable</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">CountService</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Service</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 初始值有状态，类型自动推断</span>\n  num <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  profile <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    firstName<span class=\"token operator\">:</span> <span class=\"token string\">'Bob'</span><span class=\"token punctuation\">,</span>\n    lastName<span class=\"token operator\">:</span> <span class=\"token string\">'Smith'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">get</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>profile<span class=\"token punctuation\">.</span>firstName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>profile<span class=\"token punctuation\">.</span>lastName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">async</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>num<span class=\"token operator\">+=</span>n<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<details>\n<summary>State stores may have arbitrary structure and they may be mutated in any syntactically valid way.</summary>\n<p></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> store <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@rsjs/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// stores can include any valid JS structure</span>\n<span class=\"token comment\">// including nested data, arrays, Maps, Sets, getters, setters, inheritance, ...</span>\n<span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token function\">store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">profile</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">firstName</span><span class=\"token operator\">:</span> <span class=\"token string\">'Bob'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">lastName</span><span class=\"token operator\">:</span> <span class=\"token string\">'Smith'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">get</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>user<span class=\"token punctuation\">.</span>profile<span class=\"token punctuation\">.</span>firstName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>user<span class=\"token punctuation\">.</span>profile<span class=\"token punctuation\">.</span>lastName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">hobbies</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'programming'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sports'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">friends</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// stores may be mutated in any syntactically valid way</span>\nuser<span class=\"token punctuation\">.</span>profile<span class=\"token punctuation\">.</span>firstName <span class=\"token operator\">=</span> <span class=\"token string\">'Bob'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">delete</span> user<span class=\"token punctuation\">.</span>profile<span class=\"token punctuation\">.</span>lastName<span class=\"token punctuation\">;</span>\nuser<span class=\"token punctuation\">.</span>hobbies<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'reading'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nuser<span class=\"token punctuation\">.</span>friends<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> otherUser<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</details>\n<p></p>\n<details>\n<summary>Async operations can be expressed with the standard async/await syntax.</summary>\n<p></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> store <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@rsjs/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> userStore <span class=\"token operator\">=</span> <span class=\"token function\">store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">user</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">fetchUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    userStore<span class=\"token punctuation\">.</span>user <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/user'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> userStore<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</details>\n<p></p>\n<details>\n<summary>State stores may import and use other state stores in their methods.</summary>\n<p></p>\n<p><em>userStore.js</em></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> store <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@rsjs/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> userStore <span class=\"token operator\">=</span> <span class=\"token function\">store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">user</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">fetchUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    userStore<span class=\"token punctuation\">.</span>user <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/user'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> userStore<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><em>recipesStore.js</em></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> store <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@rsjs/core'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> userStore <span class=\"token keyword\">from</span> <span class=\"token string\">'./userStore'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> recipesStore <span class=\"token operator\">=</span> <span class=\"token function\">store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">recipes</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">async</span> <span class=\"token function\">fetchRecipes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    recipesStore<span class=\"token punctuation\">.</span>recipes <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/recipes?user=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>userStore<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> recipesStore<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</details>\n<p></p>\n<details>\n<summary>Wrap your state stores with <code>store</code> as early as possible.</summary>\n<p></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token comment\">// DON'T DO THIS</span>\n<span class=\"token keyword\">const</span> person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Bob'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\nperson<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'Ann'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">store</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token comment\">// DO THIS INSTEAD</span>\n<span class=\"token keyword\">const</span> person <span class=\"token operator\">=</span> <span class=\"token function\">store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Bob'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nperson<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'Ann'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> person<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>The first example wouldn’t trigger re-renders on the <code class=\"language-text\">person.name = 'Ann'</code> mutation, because it is targeted at the raw object. Mutating the raw - none <code class=\"language-text\">store</code>-wrapped object - won’t schedule renders.</p>\n</details>\n<p></p>\n<details>\n<summary>Avoid using the <code>this</code> keyword in the methods of your state stores.</summary>\n<p></p>\n<div class=\"gatsby-highlight\" data-language=\"jsxharmony\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsxharmony line-numbers\"><code class=\"language-jsxharmony\">import { store, view } from &#39;@rsjs/core&#39;;\n\nconst counter = store({\n  num: 0,\n  increment() {\n    // DON&#39;T DO THIS\n    this.num++;\n    // DO THIS INSTEAD\n    counter.num++;\n  }\n});\n\nexport default view(() =&gt; &lt;div onClick={counter.increment}&gt;{counter.num}&lt;/div&gt;);</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><code class=\"language-text\">this.num++</code> won’t work, because <code class=\"language-text\">increment</code> is passed as a callback and loses its <code class=\"language-text\">this</code>. You should use the direct object reference - <code class=\"language-text\">counter</code> - instead of <code class=\"language-text\">this</code>.</p>\n</details>\n<h3 id=\"creating-reactive-views\" style=\"position:relative;\">Creating reactive views<a href=\"#creating-reactive-views\" aria-label=\"creating reactive views permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h3>\n<p>Wrapping your components with <code class=\"language-text\">view</code> turns them into reactive views. A reactive view re-renders whenever a piece of store - used inside its render - changes.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsxharmony\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsxharmony line-numbers\"><code class=\"language-jsxharmony\">import React from &#39;react&#39;;\nimport { view, store } from &#39;@rsjs/core&#39;;\n\n// this is a global state store\nconst user = store({ name: &#39;Bob&#39; });\n\n// this is re-rendered whenever user.name changes\nexport default view(() =&gt; (\n  &lt;div&gt;\n    &lt;input value={user.name} onChange={(ev) =&gt; (user.name = ev.target.value)} /&gt;\n    &lt;div&gt;Hello {user.name}!&lt;/div&gt;\n  &lt;/div&gt;\n));</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<details>\n<summary><strong>Wrap ALL of your components with <code>view</code> - including class and function ones - even if they don't seem to directly use a store.</strong></summary>\n<p></p>\n<p>Every component that is using a store or part of a store inside its render must be wrapped with <code class=\"language-text\">view</code>. Sometimes store usage is not so explicit and easy to to miss.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsxharmony\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsxharmony line-numbers\"><code class=\"language-jsxharmony\">import { view, store } from &#39;@rsjs/core&#39;;\n\nconst appStore = store({\n  user: { name: &#39;Ann&#39; }\n});\n\nconst App = view(() =&gt; (\n  &lt;div&gt;\n    &lt;h1&gt;My App&lt;/h1&gt;\n    &lt;Profile user={appStore.user} /&gt;\n  &lt;/div&gt;\n));\n\n// DO THIS\nconst Profile = view(({ user }) =&gt; &lt;p&gt;Name: {user.name}&lt;/p&gt;);\n\n// DON&#39;T DO THIS\n// This won&#39;t re-render on appStore.user.name = &#39;newName&#39; like mutations\nconst Profile = ({ user }) =&gt; &lt;p&gt;Name: {user.name}&lt;/p&gt;;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>If you are <strong>100% sure</strong> that your component is not using any stores you can skip the <code class=\"language-text\">view</code> wrapper.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsxharmony\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsxharmony line-numbers\"><code class=\"language-jsxharmony\">import React from &#39;react&#39;;\n\n// you don&#39;t have to wrap this component with `view`\nexport default () =&gt; &lt;p&gt;This is just plain text&lt;/p&gt;;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p><code class=\"language-text\">view</code> wrapping is advised even in these cases though.</p>\n<ul>\n<li>It saves you from future headaches as your project grows and you start to use stores inside these components.</li>\n<li><code class=\"language-text\">view</code> is pretty much equivalent to <code class=\"language-text\">memo</code> if you don’t use any stores. That is nearly always nice to have.</li>\n</ul>\n</details>\n<p></p>\n<details>\n<summary>A single reactive component may use multiple stores inside its render.</summary>\n<p></p>\n<div class=\"gatsby-highlight\" data-language=\"jsxharmony\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsxharmony line-numbers\"><code class=\"language-jsxharmony\">import React from &#39;react&#39;;\nimport { view, store } from &#39;@rsjs/core&#39;;\n\nconst user = store({ name: &#39;Bob&#39; });\nconst timeline = store({ posts: [&#39;react-easy-state&#39;] });\n\n// this is re-rendered whenever user.name or timeline.posts[0] changes\nexport default view(() =&gt; (\n  &lt;div&gt;\n    &lt;div&gt;Hello {user.name}!&lt;/div&gt;\n    &lt;div&gt;Your first post is: {timeline.posts[0]}&lt;/div&gt;\n  &lt;/div&gt;\n));</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</details>\n<p></p>\n<details>\n<summary><code>view</code> implements an optimal <code>shouldComponentUpdate</code> (or <code>memo</code>) for your components.</summary>\n<p></p>\n<ul>\n<li>\n<p>Using <code class=\"language-text\">PureComponent</code> or <code class=\"language-text\">memo</code> will provide no additional performance benefits.</p>\n</li>\n<li>\n<p>Defining a custom <code class=\"language-text\">shouldComponentUpdate</code> may rarely provide performance benefits when you apply some use case specific heuristics inside it.</p>\n</li>\n</ul>\n</details>\n<p></p>\n<details>\n<summary>Reactive renders are batched. Multiple synchronous store mutations won't result in multiple re-renders of the same component.</summary>\n<p></p>\n<div class=\"gatsby-highlight\" data-language=\"jsxharmony\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsxharmony line-numbers\"><code class=\"language-jsxharmony\">import React from &#39;react&#39;;\nimport { view, store } from &#39;@rsjs/core&#39;;\n\nconst user = store({ name: &#39;Bob&#39;, age: 30 });\n\nfunction mutateUser() {\n  user.name = &#39;Ann&#39;;\n  user.age = 32;\n}\n\n// calling `mutateUser` will only trigger a single re-render of the below component\n// even though it mutates the store two times in quick succession\nexport default view(() =&gt; (\n  &lt;div onClick={mutateUser}&gt;\n    name: {user.name}, age: {user.age}\n  &lt;/div&gt;\n));</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>If you mutate your stores multiple times synchronously from <strong>exotic task sources</strong>, multiple renders may rarely happen. If you experience performance issues you can batch changes manually with the <code class=\"language-text\">batch</code> function. <code class=\"language-text\">batch(fn)</code> executes the passed function immediately and batches any subsequent re-renders until the function execution finishes.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsxharmony\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsxharmony line-numbers\"><code class=\"language-jsxharmony\">import React from &#39;react&#39;;\nimport { view, store, batch } from &#39;@rsjs/core&#39;;\n\nconst user = store({ name: &#39;Bob&#39;, age: 30 });\n\nfunction mutateUser() {\n  // this makes sure the state changes will cause maximum one re-render,\n  // no matter where this function is getting invoked from\n  batch(() =&gt; {\n    user.name = &#39;Ann&#39;;\n    user.age = 32;\n  });\n}\n\nexport default view(() =&gt; (\n  &lt;div&gt;\n    name: {user.name}, age: {user.age}\n  &lt;/div&gt;\n));</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<blockquote>\n<p><strong>NOTE:</strong> The React team plans to improve render batching in the future. The <code class=\"language-text\">batch</code> function and built-in batching may be deprecated and removed in the future in favor of React’s own batching.</p>\n</blockquote>\n</details>\n<p></p>\n<details>\n<summary>Always apply <code>view</code> as the latest (innermost) wrapper when you combine it with other Higher Order Components.</summary>\n<p></p>\n<div class=\"gatsby-highlight\" data-language=\"jsxharmony\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsxharmony line-numbers\"><code class=\"language-jsxharmony\">import { view } from &#39;@rsjs/core&#39;;\nimport { withRouter } from &#39;react-router-dom&#39;;\nimport { withTheme } from &#39;styled-components&#39;;\n\nconst Comp = () =&gt; &lt;div&gt;A reactive component&lt;/div&gt;;\n\n// DO THIS\nwithRouter(view(Comp));\nwithTheme(view(Comp));\n\n// DON&#39;T DO THIS\nview(withRouter(Comp));\nview(withTheme(Comp));</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</details>\n<p></p>\n<details>\n<summary>Usage with (pre v4.4) React Router.</summary>\n<p></p>\n<ul>\n<li>\n<p>If routing is not updated properly, wrap your <code class=\"language-text\">view(Comp)</code> - with the <code class=\"language-text\">Route</code>s inside - in <code class=\"language-text\">withRouter(view(Comp))</code>. This lets react-router know when to update.</p>\n</li>\n<li>\n<p>The order of the HOCs matter, always use <code class=\"language-text\">withRouter(view(Comp))</code>.</p>\n</li>\n</ul>\n<p>This is not necessary if you use React Router 4.4+. You can find more details and some reasoning about this in <a href=\"https://github.com/ReactTraining/react-router/blob/master/packages/react-router/docs/guides/blocked-updates.md\">this react-router docs page</a>.</p>\n</details>\n<p></p>\n<details>\n<summary>Usage with React Developer Tools.</summary>\n<p></p>\n<p>If you want React Developer Tools to recognize your reactive view components’ names, you have to pass either a <strong>named function</strong> or an anonymous function with <strong>name inference</strong> to the <code class=\"language-text\">view</code> wrapper.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsxharmony\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsxharmony line-numbers\"><code class=\"language-jsxharmony\">import React from &#39;react&#39;;\nimport { view, store } from &#39;@rsjs/core&#39;;\n\nconst user = store({\n  name: &#39;Rick&#39;\n});\n\nconst componentName = () =&gt; &lt;div&gt;{user.name}&lt;/div&gt;;\n\nexport default view(componentName);</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</details>\n<p></p>\n<details>\n<summary>Passing nested data to third party components.</summary>\n<p></p>\n<p>Third party helpers - like data grids - may consist of many internal components which can not be wrapped by <code class=\"language-text\">view</code>, but sometimes you would like them to re-render when the passed data mutates. Traditional React components re-render when their props change by reference, so mutating the passed reactive data won’t work in these cases. You can solve this issue by deep cloning the observable data before passing it to the component. This creates a new reference for the consuming component on every store mutation.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsxharmony\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsxharmony line-numbers\"><code class=\"language-jsxharmony\">import React from &#39;react&#39;;\nimport { view, store } from &#39;@rsjs/core&#39;;\nimport Table from &#39;rc-table&#39;;\nimport cloneDeep from &#39;lodash/cloneDeep&#39;;\n\nconst dataStore = store({\n  items: [\n    {\n      product: &#39;Car&#39;,\n      value: 12\n    }\n  ]\n});\n\nexport default view(() =&gt; &lt;Table data={cloneDeep(dataStore.items)} /&gt;);</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</details>\n<h3 id=\"creating-local-stores\" style=\"position:relative;\">Creating local stores<a href=\"#creating-local-stores\" aria-label=\"creating local stores permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h3>\n<p>A singleton global store is perfect for something like the current user, but sometimes having local component states is a better fit. Just create a store inside a function component or as a class component property in these cases.</p>\n<h4 id=\"local-stores-in-function-components\" style=\"position:relative;\">Local stores in function components<a href=\"#local-stores-in-function-components\" aria-label=\"local stores in function components permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h4>\n<div class=\"gatsby-highlight\" data-language=\"jsxharmony\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsxharmony line-numbers\"><code class=\"language-jsxharmony\">import React from &#39;react&#39;\nimport { view, store } from &#39;@rsjs/core&#39;\n\nexport default view(() =&gt; {\n  const counter = store({ num: 0 })\n  const increment = () =&gt; counter.num++\n  return &lt;button={increment}&gt;{counter.num}&lt;/div&gt;\n})</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><strong>Local stores in functions rely on React hooks. They require React and React DOM v16.8+ or React Native v0.59+ to work.</strong></p>\n<details>\n<summary>You can use React hooks - including <code>useState</code> - in function components, Easy State won't interfere with them. Consider using <a href=\"#local-auto-effects-in-function-components\">autoEffect</a> instead of the <code>useEffect</code> hook for the best experience though.</summary>\n<p></p>\n<div class=\"gatsby-highlight\" data-language=\"jsxharmony\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsxharmony line-numbers\"><code class=\"language-jsxharmony\">import React from &#39;react&#39;;\nimport { view, store } from &#39;@rsjs/core&#39;;\n\nexport default view(() =&gt; {\n  const [name, setName] = useState(&#39;Ann&#39;);\n  const user = store({ age: 30 });\n  return (\n    &lt;div&gt;\n      &lt;input value={name} onChange={(ev) =&gt; setName(ev.target.value)} /&gt;\n      &lt;input value={user.age} onChange={(ev) =&gt; (user.age = ev.target.value)} /&gt;\n    &lt;/div&gt;\n  );\n});</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</details>\n<h4 id=\"local-stores-in-class-components\" style=\"position:relative;\">Local stores in class components<a href=\"#local-stores-in-class-components\" aria-label=\"local stores in class components permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h4>\n<div class=\"gatsby-highlight\" data-language=\"jsxharmony\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsxharmony line-numbers\"><code class=\"language-jsxharmony\">import React, { Component } from &#39;react&#39;;\nimport { view, store } from &#39;@rsjs/core&#39;;\n\nclass Counter extends Component {\n  counter = store({ num: 0 });\n  increment = () =&gt; counter.num++;\n\n  render() {\n    return &lt;button onClick={this.increment}&gt;{this.counter.num}&lt;/button&gt;;\n  }\n}\n\nexport default view(Counter);</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<details>\n<summary>You can also use vanilla <code>setState</code> in your class components, Easy State won't interfere with it.</summary>\n<p></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsx line-numbers\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> view<span class=\"token punctuation\">,</span> store <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@rsjs/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Profile</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Ann'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  user <span class=\"token operator\">=</span> <span class=\"token function\">store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">age</span><span class=\"token operator\">:</span> <span class=\"token number\">30</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function-variable function\">setName</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> ev<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function-variable function\">setAge</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ev</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> ev<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>setName<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>setAge<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">view</span><span class=\"token punctuation\">(</span>Profile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</details>\n<p></p>\n<details>\n<summary>Don't name local stores as <code>state</code>. It may conflict with linter rules, which guard against direct state mutations.</summary>\n<p></p>\n<div class=\"gatsby-highlight\" data-language=\"jsxharmony\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsxharmony line-numbers\"><code class=\"language-jsxharmony\">import React, { Component } from &#39;react&#39;;\nimport { view, store } from &#39;@rsjs/core&#39;;\n\nclass Profile extends Component {\n  // DON&#39;T DO THIS\n  state = store({});\n  // DO THIS\n  user = store({});\n  render() {}\n}</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</details>\n<p></p>\n<details>\n<summary>Deriving local stores from props (<code>getDerivedStateFromProps</code>).</summary>\n<p></p>\n<p>Class components wrapped with <code class=\"language-text\">view</code> have an extra static <code class=\"language-text\">deriveStoresFromProps</code> lifecycle method, which works similarly to the vanilla <code class=\"language-text\">getDerivedStateFromProps</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsxharmony\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsxharmony line-numbers\"><code class=\"language-jsxharmony\">import React, { Component } from &#39;react&#39;;\nimport { view, store } from &#39;@rsjs/core&#39;;\n\nclass NameCard extends Component {\n  userStore = store({ name: &#39;Bob&#39; });\n\n  static deriveStoresFromProps(props, userStore) {\n    userStore.name = props.name || userStore.name;\n  }\n\n  render() {\n    return &lt;div&gt;{this.userStore.name}&lt;/div&gt;;\n  }\n}\n\nexport default view(NameCard);</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Instead of returning an object, you should directly mutate the received stores. If you have multiple local stores on a single component, they are all passed as arguments - in their definition order - after the first props argument.</p>\n</details>\n<h2 id=\"advanced-usage-nerd_face\" style=\"position:relative;\">Advanced Usage :nerd_face:<a href=\"#advanced-usage-nerd_face\" aria-label=\"advanced usage nerd_face permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h2>\n<h3 id=\"adding-side-effects\" style=\"position:relative;\">Adding side effects<a href=\"#adding-side-effects\" aria-label=\"adding side effects permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h3>\n<p>Use <code class=\"language-text\">autoEffect</code> to react with automatic side effect to your store changes. Auto effects should contain end-of-chain logic - like changing the document title or saving data to LocalStorage. <code class=\"language-text\">view</code> is a special auto effect that does rendering.</p>\n<details>\n<summary>Never use auto effects to derive data from other data. Use dynamic getters instead.</summary>\n<p></p>\n<div class=\"gatsby-highlight\" data-language=\"jsxharmony\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsxharmony line-numbers\"><code class=\"language-jsxharmony\">import { store, autoEffect } from &#39;@rsjs/core&#39;;\n\n// DON&#39;T DO THIS\nconst store1 = store({ name: &#39;Store 1&#39; });\nconst store2 = store({ name: &#39;Store 2&#39; });\nautoEffect(() =&gt; (store2.name = store1.name));\n\n// DO THIS INSTEAD\nconst store1 = store({ name: &#39;Store 1&#39; });\nconst store2 = store({\n  get name() {\n    return store1.name;\n  }\n});</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</details>\n<p></p>\n<h4 id=\"global-auto-effects\" style=\"position:relative;\">Global auto effects<a href=\"#global-auto-effects\" aria-label=\"global auto effects permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h4>\n<p>Global auto effects can be created with <code class=\"language-text\">autoEffect</code> and cleared up with <code class=\"language-text\">clearEffect</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsxharmony\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsxharmony line-numbers\"><code class=\"language-jsxharmony\">import { store, autoEffect, clearEffect } from &#39;@rsjs/core&#39;;\n\nconst app = store({ name: &#39;My App&#39; });\nconst effect = autoEffect(() =&gt; (document.title = app.name));\n\n// this also updates the document title\napp.name = &#39;My Awesome App&#39;;\n\nclearEffect(effect);\n// this won&#39;t update the document title, the effect is cleared\napp.name = &#39;My App&#39;;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id=\"local-auto-effects-in-function-components\" style=\"position:relative;\">Local auto effects in function components<a href=\"#local-auto-effects-in-function-components\" aria-label=\"local auto effects in function components permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h4>\n<p>Use local auto effects in function components instead of the <code class=\"language-text\">useEffect</code> hook when reactive stores are used inside them. These local effects are automatically cleared when the component unmounts.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsxharmony\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsxharmony line-numbers\"><code class=\"language-jsxharmony\">import React from &#39;react&#39;;\nimport { store, view, autoEffect } from &#39;@rsjs/core&#39;;\n\nexport default view(() =&gt; {\n  const app = store({ name: &#39;My App&#39; });\n  // no need to clear the effect\n  autoEffect(() =&gt; (document.title = app.name));\n});</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<details>\n<summary>Explicitly pass none reactive dependencies - like vanillas props and state - to local auto effects in function components.</summary>\n<p></p>\n<p>Because of the design of React hooks you have to explicitly pass all none reactive data to a hook-like dependency array. This makes sure that the effect also runs when the none reactive data changes.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsxharmony\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsxharmony line-numbers\"><code class=\"language-jsxharmony\">import React from &#39;react&#39;;\nimport { store, view, autoEffect } from &#39;@rsjs/core&#39;;\n\nexport default view(({ greeting }) =&gt; {\n  const app = store({ name: &#39;My App&#39; });\n  // pass `greeting` in the dependency array because it is not coming from a store\n  autoEffect(() =&gt; (document.title = `${greeting} ${app.name}`), [greeting]);\n});</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</details>\n<p></p>\n<h4 id=\"local-auto-effects-in-class-components\" style=\"position:relative;\">Local auto effects in class components<a href=\"#local-auto-effects-in-class-components\" aria-label=\"local auto effects in class components permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h4>\n<p>Local effects in class components must be cleared when the component unmounts.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsxharmony\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsxharmony line-numbers\"><code class=\"language-jsxharmony\">import React, { Component } from &#39;react&#39;;\nimport { store, view, autoEffect } from &#39;@rsjs/core&#39;;\n\nclass App extends Component {\n  app = store({ name: &#39;My App&#39; });\n\n  componentDidMount() {\n    this.effect = autoEffect(() =&gt; (document.title = this.app.name));\n  }\n\n  componentWillUnmount() {\n    // local effects in class components must be cleared on unmount\n    clearEffect(this.effect);\n  }\n}</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"api-summary-\" style=\"position:relative;\">API Summary 📖<a href=\"#api-summary-\" aria-label=\"api summary  permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h2>\n<h3 id=\"storeobj\" style=\"position:relative;\">store(obj)<a href=\"#storeobj\" aria-label=\"storeobj permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h3>\n<p>Creates an observable store from the passed object and returns it. Can be used outside components for <a href=\"#creating-global-stores\">global stores</a> and inside components for <a href=\"(#creating-local-stores)\">local stores</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> store <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@rsjs/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token function\">store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Rick'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"viewcomp\" style=\"position:relative;\">view(Comp)<a href=\"#viewcomp\" aria-label=\"viewcomp permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h3>\n<p>Creates a <a href=\"#creating-reactive-views\">reactive view</a> from the passed component and returns it. A reactive view re-renders whenever any store data used inside it is mutated.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsxharmony\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsxharmony line-numbers\"><code class=\"language-jsxharmony\">import React from &#39;react&#39;;\nimport { view, store } from &#39;@rsjs/core&#39;;\n\nconst user = store({ name: &#39;Bob&#39; });\n\nexport default view(() =&gt; &lt;div&gt;Hello {user.name}!&lt;/div&gt;);</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"batchfn\" style=\"position:relative;\">batch(fn)<a href=\"#batchfn\" aria-label=\"batchfn permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h3>\n<p>Immediately executes the passed function and batches all store mutations inside it. Batched mutations are guaranteed to not trigger unnecessary double renders. Most task sources are batched automatically, only use <code class=\"language-text\">batch</code> if you encounter performance issues.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsxharmony\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-jsxharmony line-numbers\"><code class=\"language-jsxharmony\">import React from &#39;react&#39;;\nimport { view, store } from &#39;@rsjs/core&#39;;\n\nconst user = store({ name: &#39;Bob&#39; });\n\nfunction setName() {\n  batch(() =&gt; {\n    user.name = &#39;Rick&#39;;\n    user.name = &#39;Ann&#39;;\n  });\n}</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"autoeffectfn\" style=\"position:relative;\">autoEffect(fn)<a href=\"#autoeffectfn\" aria-label=\"autoeffectfn permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h3>\n<p>Creates a reactive function from the passed one, immediately executes it, and returns it. A reactive function automatically re-reruns whenever any store data used inside it is mutated.</p>\n<p>Can be used both <a href=\"#global-auto-effects\">outside</a> and <a href=\"#local-auto-effects-in-function-components\">inside</a> components.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> store<span class=\"token punctuation\">,</span> autoEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@rsjs/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token function\">store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Bob'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">autoEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> user<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"cleareffectfn\" style=\"position:relative;\">clearEffect(fn)<a href=\"#cleareffectfn\" aria-label=\"cleareffectfn permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h3>\n<p>Takes a reactive function (returned by <code class=\"language-text\">autoEffect</code>) and clears the reactivity from it. Cleared reactive functions will no longer re-rerun on related store mutations. Reactive functions created inside function components are automatically cleared when the component unmounts.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> store<span class=\"token punctuation\">,</span> autoEffect<span class=\"token punctuation\">,</span> clearEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@rsjs/core'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token function\">store</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'Bob'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> effect <span class=\"token operator\">=</span> <span class=\"token function\">autoEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>title <span class=\"token operator\">=</span> user<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">clearEffect</span><span class=\"token punctuation\">(</span>effect<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"articles-\" style=\"position:relative;\">Articles 📢<a href=\"#articles-\" aria-label=\"articles  permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h2>\n<ul>\n<li>TODO</li>\n</ul>\n<h2 id=\"performance-\" style=\"position:relative;\">Performance 🚀<a href=\"#performance-\" aria-label=\"performance  permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h2>\n<p>You can compare Easy State with plain React and other state management libraries with the below benchmarks. It performs a bit better than MobX and similarly to Redux.</p>\n<h2 id=\"platform-support-\" style=\"position:relative;\">Platform support 💻<a href=\"#platform-support-\" aria-label=\"platform support  permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h2>\n<ul>\n<li>Node: 6 and above</li>\n<li>Chrome: 49 and above</li>\n<li>Firefox: 38 and above</li>\n<li>Safari: 10 and above</li>\n<li>Edge: 12 and above</li>\n<li>Opera: 36 and above</li>\n<li>React Native: 0.59 and above</li>\n</ul>\n<p><em>This library is based on non polyfillable ES6 Proxies. Because of this, it will never support IE.</em></p>","fields":{"slug":"/post/2020/状态管理/"},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#rsjscore\">@rsjs/core</a></p>\n</li>\n<li>\n<p><a href=\"#introduction-\">Introduction 👋</a></p>\n</li>\n<li>\n<p><a href=\"#installation-\">Installation 💿</a></p>\n</li>\n<li>\n<p><a href=\"#usage-\">Usage 😎</a></p>\n<ul>\n<li>\n<p><a href=\"#%E5%88%9B%E5%BB%BAservice\">创建service</a></p>\n</li>\n<li>\n<p><a href=\"#creating-reactive-views\">Creating reactive views</a></p>\n</li>\n<li>\n<p><a href=\"#creating-local-stores\">Creating local stores</a></p>\n<ul>\n<li><a href=\"#local-stores-in-function-components\">Local stores in function components</a></li>\n<li><a href=\"#local-stores-in-class-components\">Local stores in class components</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#advanced-usage-nerd_face\">Advanced Usage :nerd_face:</a></p>\n<ul>\n<li>\n<p><a href=\"#adding-side-effects\">Adding side effects</a></p>\n<ul>\n<li><a href=\"#global-auto-effects\">Global auto effects</a></li>\n<li><a href=\"#local-auto-effects-in-function-components\">Local auto effects in function components</a></li>\n<li><a href=\"#local-auto-effects-in-class-components\">Local auto effects in class components</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#api-summary-\">API Summary 📖</a></p>\n<ul>\n<li><a href=\"#storeobj\">store(obj)</a></li>\n<li><a href=\"#viewcomp\">view(Comp)</a></li>\n<li><a href=\"#batchfn\">batch(fn)</a></li>\n<li><a href=\"#autoeffectfn\">autoEffect(fn)</a></li>\n<li><a href=\"#cleareffectfn\">clearEffect(fn)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#articles-\">Articles 📢</a></p>\n</li>\n<li>\n<p><a href=\"#performance-\">Performance 🚀</a></p>\n</li>\n<li>\n<p><a href=\"#platform-support-\">Platform support 💻</a></p>\n</li>\n</ul>","frontmatter":{"title":"状态管理","date":"March 20, 2020","description":null},"wordCount":{"words":1087,"paragraphs":128,"sentences":155}}},"pageContext":{"slug":"/post/2020/状态管理/","previous":{"fields":{"slug":"/post/2019/react-mini-program/"},"frontmatter":{"title":"使用 完整react能力 开发小程序","tags":["小程序","react"],"description":null}},"next":{"fields":{"slug":"/post/2020/跨团队沟通合作/"},"frontmatter":{"title":"关于跨团队沟通与合作","tags":["方法论","实践"],"description":null}}}},"staticQueryHashes":["1006016363","324394502","63159454"],"slicesMap":{}}