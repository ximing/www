{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/post/2016/IM 消息文件实现/","result":{"data":{"site":{"siteMetadata":{"title":"一席之地","author":"xi ming"}},"markdownRemark":{"id":"fadbc312-ae3c-511a-b4c0-2857d10201a9","excerpt":"背景： 之前负责的云盘业务和 内部使用的大象 IM 融合，云盘需要负责大象日常 im…","html":"<h3 id=\"背景\" style=\"position:relative;\">背景：<a href=\"#%E8%83%8C%E6%99%AF\" aria-label=\"背景 permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h3>\n<p>之前负责的云盘业务和 内部使用的大象 IM 融合，云盘需要负责大象日常 im 所有的文件流转，这里涉及到两个现有系统融合的问题，大象 之前的协议里面文件消息包含的是一个<strong>静态的链接</strong>，目前还没有上鉴权。云盘设计之初就为了保证安全性，所有分发出去的链接都是<strong>动态的，有鉴权信息和时效的</strong>。那么如何设计一个有鉴权信息而且还满足大象 im 协议需求的 url 就成了融合里面稍微麻烦点的问题。</p>\n<h3 id=\"最初的想法\" style=\"position:relative;\">最初的想法<a href=\"#%E6%9C%80%E5%88%9D%E7%9A%84%E6%83%B3%E6%B3%95\" aria-label=\"最初的想法 permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h3>\n<p>1，链接只包含必要的im id和cookie(或者header)，然后请求到服务端，服务端鉴权后，定位到文件，然后重定向到一个动态链接上面。这个方案的问题在app端兼容上面，而且一次图片要发起两次请求，体验不好，第一个被否决。\n2，使用java/go转发流量，链接包含必要的im id和和cookie(或者header)，请求到一个java的服务，鉴权和定位文件没有问题，就去mss上面请求文件，然后使用流对流的方式返回给客户端，这个有两个问题：\n    a：观察流量走向：  业务nginx->java服务->mss nginx->swift集群，这里有两个问题，如果扩容，那么java服务和swift集群都要同时扩容，流量在内部走了两份就代表流量浪费和相应时间加长\n    b：流对流不稳定，云盘在非核心的地方尝试使用过流对流的方案，基本上每3W 次请求会有1~2次失败，因为关键节点太多，稳定性是乘法关系，网络或者机器内存等等原因稍微有问题，就可能导致失败这不满足 im 图片在消息稳定性上的要求</p>\n<h3 id=\"进一步的想法-\" style=\"position:relative;\">进一步的想法  <a href=\"#%E8%BF%9B%E4%B8%80%E6%AD%A5%E7%9A%84%E6%83%B3%E6%B3%95-\" aria-label=\"进一步的想法  permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h3>\n<p>仔细想了下，重新观察正常的流量走向是：<code class=\"language-text\">请求->mss nginx->swift 集群</code>。在方案 2 中 我们添加 java 服务的原因就是为了做：1，鉴权  2，文件寻址。\n根据我之前的了解，其实可以在 nginx 上面直接做，所以进一步我想直接用 lua 或者 c 给 nginx 写这个业务模块，和基建的同学沟通后得知他们的 nginx 可以直接写 lua 拓展，那么事情就简单了\n第一个直觉想法是流量请求到 nginx 里面，然后由 lua 鉴权，然后文件寻址。lua 请求到文件后添加到 nginx response content 里面核心代码大概就像下面这样</p>\n<div class=\"gatsby-highlight\" data-language=\"lua\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-lua line-numbers\"><code class=\"language-lua\"><span class=\"token operator\">//</span>前面是鉴权，寻址文件获得url\n<span class=\"token keyword\">local</span> http <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"socket.http\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">local</span> body<span class=\"token punctuation\">,</span> code <span class=\"token operator\">=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://7xi576.com1.z0.glb.clouddn.com/01CE5B62-E4E2-4D84-99EC-BE70DA46269B.png\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> body <span class=\"token keyword\">then</span> ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"获取不到文件\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">end</span>\nngx<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>但是转头一想，如果由 lua 去获取文件，肯定没有 nginx 本身 c 模块直接获取文件要好一些，所以有了接下来的想法，核心原理就是直接用 nginx 的 proxy_pass 特性，每次请求上下文中由 lua 鉴权，寻址文件，并动态动态替换需要 proxy_pass 的 url 和 content-type 之类的参数即可。\n这样整个文件流转就变成下面比较合理的方式：</p>\n<p><code class=\"language-text\">client request file -> mss nginx（鉴权，文件寻址，代理到文件）-> mss server</code></p>\n<p>整个方案稳定性和云盘原有方案基本保持一致，安全性一致，同时兼容大象im协议。\n核心 lua 代码大概是下面样子：</p>\n<div class=\"gatsby-highlight\" data-language=\"lua\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-lua line-numbers\"><code class=\"language-lua\"><span class=\"token keyword\">local</span> http <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"socket.http\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">local</span> ltn12 <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ltn12\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">local</span> cjson <span class=\"token operator\">=</span> <span class=\"token function\">require</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"cjson\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">local</span> cjsonObj <span class=\"token operator\">=</span> cjson<span class=\"token punctuation\">.</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">local</span> var <span class=\"token operator\">=</span> ngx<span class=\"token punctuation\">.</span>var<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">local</span> request_body <span class=\"token operator\">=</span> <span class=\"token string\">[[ { \"objectId\" : \"test\",\"password\" : \"123\" } ]]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">local</span> response_body <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">local</span> body<span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">,</span> response_headers <span class=\"token operator\">=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">request</span><span class=\"token punctuation\">{</span>\n    url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://127.0.0.1:8411/image\"</span><span class=\"token punctuation\">,</span>\n    method <span class=\"token operator\">=</span> <span class=\"token string\">\"POST\"</span><span class=\"token punctuation\">,</span>\n    headers <span class=\"token operator\">=</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">[</span><span class=\"token string\">\"Authorization\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Maybe you need an Authorization header?\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">[</span><span class=\"token string\">\"Content-Type\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">[</span><span class=\"token string\">\"Content-Length\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> request_body<span class=\"token punctuation\">:</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">[</span><span class=\"token string\">\"Cookie\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> var<span class=\"token punctuation\">.</span>http_cookie<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    source <span class=\"token operator\">=</span> ltn12<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">.</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span>request_body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    sink <span class=\"token operator\">=</span> ltn12<span class=\"token punctuation\">.</span>sink<span class=\"token punctuation\">.</span><span class=\"token function\">table</span><span class=\"token punctuation\">(</span>response_body<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span>response_body<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"table\"</span> <span class=\"token keyword\">then</span>\n    <span class=\"token keyword\">local</span> resBodyStr <span class=\"token operator\">=</span> table<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>response_body<span class=\"token punctuation\">,</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">local</span> resJsonObj <span class=\"token operator\">=</span> cjsonObj<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>resBodyStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> code <span class=\"token operator\">==</span> <span class=\"token number\">200</span> <span class=\"token keyword\">then</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> resJsonObj<span class=\"token punctuation\">.</span>error <span class=\"token keyword\">then</span>\n            var<span class=\"token punctuation\">.</span>image_proxy_url <span class=\"token operator\">=</span> resJsonObj<span class=\"token punctuation\">[</span><span class=\"token string\">\"filepath\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">else</span>\n            ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>resJsonObj<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">.</span>msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">end</span>\n    <span class=\"token keyword\">else</span>\n        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"获取不到文件\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">else</span>\n    ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Not a table:\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span>response_body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"进一步的想法\" style=\"position:relative;\">进一步的想法<a href=\"#%E8%BF%9B%E4%B8%80%E6%AD%A5%E7%9A%84%E6%83%B3%E6%B3%95\" aria-label=\"进一步的想法 permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h3>\n<p>如果频繁(每次请求更改一次)更改的 proxy_pass 的话，对 nginx 的性能会有影响，同时模块见耦合也过于严重，so，我们的想法进一步变成通过内部 rewrite 来进行解耦，同时隔离开各个模块：\nauth，error，not-fount，proxy_pass.\n整个流程说难也不难，主要是思路上的问题，同时还要对nginx模块/拓展开发足够熟悉并能灵活运用。</p>","fields":{"slug":"/post/2016/IM 消息文件实现/"},"tableOfContents":"<ul>\n<li><a href=\"#%E8%83%8C%E6%99%AF\">背景：</a></li>\n<li><a href=\"#%E6%9C%80%E5%88%9D%E7%9A%84%E6%83%B3%E6%B3%95\">最初的想法</a></li>\n<li><a href=\"#%E8%BF%9B%E4%B8%80%E6%AD%A5%E7%9A%84%E6%83%B3%E6%B3%95-\">进一步的想法  </a></li>\n<li><a href=\"#%E8%BF%9B%E4%B8%80%E6%AD%A5%E7%9A%84%E6%83%B3%E6%B3%95\">进一步的想法</a></li>\n</ul>","frontmatter":{"title":"IM 消息文件实现","date":"July 23, 2016","description":null},"wordCount":{"words":166,"paragraphs":12,"sentences":12}}},"pageContext":{"slug":"/post/2016/IM 消息文件实现/","previous":{"fields":{"slug":"/post/2016/oa/"},"frontmatter":{"title":"轻OA 的一些思考","tags":["rethink","oa"],"description":null}},"next":{"fields":{"slug":"/post/2016/德州牌型概率/"},"frontmatter":{"title":"德州牌型概率","tags":["玩"],"description":null}}}},"staticQueryHashes":["1006016363","324394502","63159454"],"slicesMap":{}}