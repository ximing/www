{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/post/2017/实时协作-yjs基本理解3-操作日志/","result":{"data":{"site":{"siteMetadata":{"title":"一席之地","author":"xi ming"}},"markdownRemark":{"id":"42c2feca-cba2-54b4-9feb-6240a2bf3107","excerpt":"在 Yjs 中，操作日志（Operation Log）被用于记录对数据的所有修改操作，这包括插入字符、删除字符等。每个操作都包含有关操作的信息，如操作的类型（插入或删除）、操作的位置、操作的内容，以及操作的唯一标识符（包含用户 ID 和时间戳）。操作日志可以用于生成一个差异（delta…","html":"<p>在 Yjs 中，操作日志（Operation Log）被用于记录对数据的所有修改操作，这包括插入字符、删除字符等。每个操作都包含有关操作的信息，如操作的类型（插入或删除）、操作的位置、操作的内容，以及操作的唯一标识符（包含用户 ID 和时间戳）。操作日志可以用于生成一个差异（delta），这个差异可以发送给其他的副本以便更新其状态。</p>\n<p>在收到新的操作时，Yjs 首先会将其添加到操作日志中，然后将其应用到数据结构上。这样，即使在没有网络连接的情况下，用户也可以继续进行编辑操作，这些操作会被保存在本地的操作日志中。当网络连接恢复后，Yjs 可以通过发送和接收操作日志来同步数据。\n以下是一个简单的实例，演示了如何在 Yjs 中使用和更新操作日志：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">OperationLog</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>log <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 添加一个新的操作到操作日志</span>\n  <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">operation</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>operation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 获取操作日志</span>\n  <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 将操作日志转换为差异</span>\n  <span class=\"token function\">toDelta</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 以简单的方式，直接返回整个操作日志</span>\n    <span class=\"token comment\">// 在实际的 Yjs 系统中，会实现更复杂的差异计算算法</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> opLog <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">OperationLog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nopLog<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'insert'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">position</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token string\">'Hello, world!'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">siteId</span><span class=\"token operator\">:</span> <span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">timestamp</span><span class=\"token operator\">:</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nopLog<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">'delete'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">position</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">length</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">siteId</span><span class=\"token operator\">:</span> <span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">timestamp</span><span class=\"token operator\">:</span> Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>opLog<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 输出操作日志</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>opLog<span class=\"token punctuation\">.</span><span class=\"token function\">toDelta</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 输出操作日志的差异</span>\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>在这个例子中，我们首先创建了一个操作日志 <code class=\"language-text\">opLog</code>，然后添加了两个操作：一个插入操作和一个删除操作。我们可以使用 <code class=\"language-text\">opLog.get()</code> 来获取操作日志，也可以使用 <code class=\"language-text\">opLog.toDelta()</code> 来获取操作日志的差异。</p>\n<p>我们实现的这个例子非常简单，实际的 Yjs 系统会对操作日志进行更复杂的处理，例如，当计算差异时，Yjs 可能会比较两个副本的向量时钟，然后只包含那些在接收方副本上还未执行的操作。</p>","fields":{"slug":"/post/2017/实时协作-yjs基本理解3-操作日志/"},"tableOfContents":"","frontmatter":{"title":"实时协作-yjs基本理解3-操作日志","date":"April 12, 2017","description":null},"wordCount":{"words":53,"paragraphs":4,"sentences":4}}},"pageContext":{"slug":"/post/2017/实时协作-yjs基本理解3-操作日志/","previous":{"fields":{"slug":"/post/2017/实时协作-yjs基本理解2-向量时钟/"},"frontmatter":{"title":"实时协作-yjs基本理解2-向量时钟","tags":null,"description":null}},"next":{"fields":{"slug":"/post/2017/实时协作-yjs基本理解4-Ytext/"},"frontmatter":{"title":"实时协作-yjs基本理解4-Ytext","tags":null,"description":null}}}},"staticQueryHashes":["1006016363","324394502","63159454"],"slicesMap":{}}