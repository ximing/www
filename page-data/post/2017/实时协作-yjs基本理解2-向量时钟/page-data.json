{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/post/2017/实时协作-yjs基本理解2-向量时钟/","result":{"data":{"site":{"siteMetadata":{"title":"一席之地","author":"xi ming"}},"markdownRemark":{"id":"3f3674ed-3812-5923-a7df-0346b8f2d5dd","excerpt":"向量时钟（Vector Clock）是分布式系统中用于记录和比较事件发生顺序的一种数据结构。每个节点都维护着一个向量时钟，向量时钟是一个列表，每个元素对应一个系统节点的逻辑时钟值。逻辑时钟值是一个非负整数，表示一个节点已经发生的事件的数量。 在 Yjs…","html":"<p>向量时钟（Vector Clock）是分布式系统中用于记录和比较事件发生顺序的一种数据结构。每个节点都维护着一个向量时钟，向量时钟是一个列表，每个元素对应一个系统节点的逻辑时钟值。逻辑时钟值是一个非负整数，表示一个节点已经发生的事件的数量。</p>\n<p>在 Yjs 中，每个用户或客户端可以被视为一个节点。向量时钟用于追踪每个节点的操作顺序。具体来说，每个 Yjs 节点（客户端）都维护一个向量时钟，其中，向量时钟的键是节点的 ID，值是节点已执行的操作的数量。</p>\n<p>当一个节点执行一个新的操作时，它会在其向量时钟中对应的元素值加一。当一个节点接收到其他节点的更新时，它会将自己的向量时钟与接收到的向量时钟进行比较，并据此决定更新的顺序。</p>\n<p>向量时钟的比较规则如下：</p>\n<ul>\n<li>如果一个向量时钟的所有元素值都大于或等于另一个向量时钟的对应元素值，我们说第一个向量时钟“发生在”第二个向量时钟之后。</li>\n<li>如果一个向量时钟的所有元素值都小于或等于另一个向量时钟的对应元素值，我们说第一个向量时钟“发生在”第二个向量时钟之前。</li>\n<li>如果两个向量时钟中的一部分元素值大于对方，另一部分元素值小于对方，我们说这两个向量时钟是并发的。</li>\n</ul>\n<p>Yjs 使用向量时钟来解决并发操作的问题。当两个并发的操作修改了同一个数据元素时，Yjs 会根据向量时钟的顺序来决定哪个操作应该被接受。具体来说，Yjs 会选择向量时钟值较大的操作，也就是后发生的操作。</p>\n<p>需要注意的是，Yjs 的向量时钟实际上是一种优化的实现，称为版本向量（Version Vector）。版本向量只跟踪那些修改了共享数据的节点的逻辑时钟值，而不是所有节点的逻辑时钟值。这使得 Yjs 能够以更低的内存和网络开销处理大量的节点和操作。</p>\n<p>以下是一个简单的实例，演示了如何在 Yjs 中使用和更新向量时钟：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">VectorClock</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>clock <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 获取当前节点的时钟值</span>\n  <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>siteId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>clock<span class=\"token punctuation\">[</span>siteId<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 增加当前节点的时钟值</span>\n  <span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">siteId</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>clock<span class=\"token punctuation\">[</span>siteId<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>siteId<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 合并两个向量时钟，取各自时钟值的最大值</span>\n  <span class=\"token function\">merge</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">otherClock</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> siteId <span class=\"token keyword\">in</span> otherClock<span class=\"token punctuation\">.</span>clock<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>clock<span class=\"token punctuation\">[</span>siteId<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>siteId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> otherClock<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>siteId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 比较两个向量时钟</span>\n  <span class=\"token function\">compare</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">otherClock</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> greater <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> lesser <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> siteId <span class=\"token keyword\">in</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>clock<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>siteId<span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> otherClock<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>siteId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        greater <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>siteId<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> otherClock<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>siteId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        lesser <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>greater <span class=\"token operator\">&amp;&amp;</span> lesser<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// concurrent</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>greater<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// this clock happened after otherClock</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>lesser<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// this clock happened before otherClock</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// identical</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> clockA <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">VectorClock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> clockB <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">VectorClock</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nclockA<span class=\"token punctuation\">.</span><span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token string\">'A'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nclockB<span class=\"token punctuation\">.</span><span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token string\">'B'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>clockA<span class=\"token punctuation\">.</span><span class=\"token function\">compare</span><span class=\"token punctuation\">(</span>clockB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Output: 0, A and B are concurrent</span>\n\nclockA<span class=\"token punctuation\">.</span><span class=\"token function\">merge</span><span class=\"token punctuation\">(</span>clockB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>clockA<span class=\"token punctuation\">.</span><span class=\"token function\">compare</span><span class=\"token punctuation\">(</span>clockB<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Output: 1, A happened after B</span>\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>在这个例子中，我们首先创建了两个向量时钟 <code class=\"language-text\">clockA</code> 和 <code class=\"language-text\">clockB</code>，然后使它们各自增加一次。此时，<code class=\"language-text\">clockA</code> 和 <code class=\"language-text\">clockB</code> 的值是并发的（即，它们的值无法确定先后顺序），所以 <code class=\"language-text\">clockA.compare(clockB)</code> 的结果是 <code class=\"language-text\">0</code>。</p>\n<p>然后我们调用 <code class=\"language-text\">clockA.merge(clockB)</code>，这将会取 <code class=\"language-text\">clockA</code> 和 <code class=\"language-text\">clockB</code> 的各自元素的最大值，合并后 <code class=\"language-text\">clockA</code> 的值变大，所以 <code class=\"language-text\">clockA.compare(clockB)</code> 的结果是 <code class=\"language-text\">1</code>，表示 <code class=\"language-text\">clockA</code> 发生在 <code class=\"language-text\">clockB</code> 之后。</p>\n<p>这个例子很简单，在实际的 Yjs 系统中，可能有多个节点，并且每个节点都可能有多个操作。Yjs 使用向量时钟来跟踪所有这些操作，并确保它们能够以一致的方式合并。</p>","fields":{"slug":"/post/2017/实时协作-yjs基本理解2-向量时钟/"},"tableOfContents":"","frontmatter":{"title":"实时协作-yjs基本理解2-向量时钟","date":"April 12, 2017","description":null},"wordCount":{"words":96,"paragraphs":13,"sentences":13}}},"pageContext":{"slug":"/post/2017/实时协作-yjs基本理解2-向量时钟/","previous":{"fields":{"slug":"/post/2017/实时协作-yjs基本理解1-概览/"},"frontmatter":{"title":"实时协作-yjs基本理解","tags":null,"description":null}},"next":{"fields":{"slug":"/post/2017/实时协作-yjs基本理解3-操作日志/"},"frontmatter":{"title":"实时协作-yjs基本理解3-操作日志","tags":null,"description":null}}}},"staticQueryHashes":["1006016363","324394502","63159454"],"slicesMap":{}}