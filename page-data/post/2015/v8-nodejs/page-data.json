{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/post/2015/v8-nodejs/","result":{"data":{"site":{"siteMetadata":{"title":"一席之地","author":"xi ming"}},"markdownRemark":{"id":"10be63af-b6ef-59cb-bf02-2cb0fd4cbae5","excerpt":"前阶段刚说到全栈的问题，到底要多深，多后期才能算是全栈每个人心中都有自己的看法，我自己感觉多学一些总不是坏事。 最近用 node 遇到了一些障碍，在看 node 的源码了解一下，然后想到网上现在还没有相关的分析，大多数都是开发 addons，而且中途 v…","html":"<p>前阶段刚说到全栈的问题，到底要多深，多后期才能算是全栈每个人心中都有自己的看法，我自己感觉多学一些总不是坏事。</p>\n<p>最近用 node 遇到了一些障碍，在看 node 的源码了解一下，然后想到网上现在还没有相关的分析，大多数都是开发 addons，而且中途 v8 进行了一次大升级，很多能查到的资料都是错得，所以就在这里简单地写一些自己的经验吧。</p>\n<p>众所周知，node 是基于 v8 做的，v8 是什么？简单来说就是一个 javascript 的解析器，他会读取 js 程序，使用 jit 技术实时编译我们写的程序，最后运行的是机器码，所以 v8 运行的 js 特别快。</p>\n<h1 id=\"安装依赖工具\" style=\"position:relative;\">安装依赖工具<a href=\"#%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96%E5%B7%A5%E5%85%B7\" aria-label=\"安装依赖工具 permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h1>\n<p>首先我们需要进行环境的配置，首先去 v8 主页<a href=\"https://code.google.com/p/v8/%EF%BC%8C%E5%9C%A8wiki%E4%B8%AD%E6%89%BE%E5%88%B0BuildingWithGYP%E8%BF%99%E4%B8%80%E9%A1%B9%EF%BC%8C%E7%84%B6%E5%90%8E%E5%8F%91%E7%8E%B0%E8%A2%AB%E7%A7%BB%E5%8A%A8%E5%88%B0%E5%8F%A6%E4%B8%80%E4%B8%AA%E9%A1%B5%E9%9D%A2%EF%BC%8C%E6%88%91%E4%BB%AC%E7%82%B9%E5%87%BB%E8%BF%87%E5%8E%BB\">https://code.google.com/p/v8/，在wiki中找到BuildingWithGYP这一项，然后发现被移动到另一个页面，我们点击过去</a></p>\n<p><img src=\"https://xming-images.oss-cn-beijing.aliyuncs.com/md/1582807389975-59640e48800ca59eca1c72e991f4ebae.png\" alt=\"\"></p>\n<p>我们发现这个页面提到了一个新的工具 gclient，v8 项目就是用这个管理的，所以我们需要下载它，现在去他的主页<a href=\"https://code.google.com/p/v8/\" title=\"https://code.google.com/p/gclient/\">https://code.google.com/p/gclient/</a>，我们发现他已经成为 depot_tools 的一个子项目[如下图]，然后我们点击链接跳转过去</p>\n<p><img src=\"https://xming-images.oss-cn-beijing.aliyuncs.com/md/1582807397474-f58c229e71327652243cd7fdb8467301.png\" alt=\"\"></p>\n<p>由于我是用的 mac，所以直接使用 mac 的安装方式</p>\n<p>Installing on Linux and Mac</p>\n<ol>\n<li>Confirm <code class=\"language-text\">git</code> is installed. git 2.2.1+ recommended.</li>\n<li>Fetch depot_tools:\n<code class=\"language-text\">$ git clone</code> <a href=\"https://chromium.googlesource.com/chromium/tools/depot_tools.git\" title=\"https://chromium.googlesource.com/chromium/tools/depot_tools.git\">chromium/tools/depot_tools.git - Git at Google</a></li>\n<li>Add <code class=\"language-text\">depot_tools</code> to your <a href=\"http://www.lmgtfy.com/?q=PATH+environment\" title=\"PATH\">PATH</a>:<code class=\"language-text\">$ export PATH=`pwd`/depot_tools:\"$PATH\"</code>\n<ul>\n<li>Yes, you want to put depot_tools ahead of everything else, otherwise gcl will refer to the GNU Common Lisp compiler.</li>\n<li>You may want to add this to your <code class=\"language-text\">.bashrc</code> file or your shell’s equivalent so that you don’t need to reset your $PATH manually each time you open a new shell.</li>\n</ul>\n</li>\n</ol>\n<p>这里建议提前安装 xcode，这样的话相关的工具都会安装好，不需要自己在配置。</p>\n<h1 id=\"安装-v8\" style=\"position:relative;\">安装 v8<a href=\"#%E5%AE%89%E8%A3%85-v8\" aria-label=\"安装 v8 permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h1>\n<p>安装使用两个命令</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">gclient config https://chromium.googlesource.com/v8/v8.git\ngclient <span class=\"token function\">sync</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>剩下 gclient 就会全自动的帮我们完成之后的操作，看网速，我大概等了将近 2 个小时</p>\n<h1 id=\"生成-xcode-工程\" style=\"position:relative;\">生成 xcode 工程<a href=\"#%E7%94%9F%E6%88%90-xcode-%E5%B7%A5%E7%A8%8B\" aria-label=\"生成 xcode 工程 permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h1>\n<p>进入到我们刚才下号的 v8 目录，输入下面的命令</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">build/gyp_v8 -Dtarget_arch=x64</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>然后就可以使用 xcode 打开/build 目录下面的 all.xcodeproj</p>\n<h1 id=\"制作简单地-log-函数\" style=\"position:relative;\">制作简单地 log 函数<a href=\"#%E5%88%B6%E4%BD%9C%E7%AE%80%E5%8D%95%E5%9C%B0-log-%E5%87%BD%E6%95%B0\" aria-label=\"制作简单地 log 函数 permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h1>\n<p>我在这里就举一个简单地例子，让大家熟悉 node 的原理，在 xcode 中找到 sample 项目，右键 process 复制一个 target，我们重命名这个复制好的 target 叫 helloV8，然后再 source 这个 group 里面创建一个 cpp 文件，随意起名字，我这里叫做 helloV8.cpp</p>\n<p><img src=\"https://xming-images.oss-cn-beijing.aliyuncs.com/md/1582807405805-d7384d093e5db6fa1709df5b17007638.png\" alt=\"\"></p>\n<p>将下面的代码复制一份到新创建好的 helloV8.cpp 中</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"include/v8.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"include/libplatform/libplatform.h\"</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;fstream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;sstream></span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> v8<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">printjs</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> FunctionCallbackInfo<span class=\"token operator\">&lt;</span>Value<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  v8<span class=\"token double-colon punctuation\">::</span>String<span class=\"token double-colon punctuation\">::</span>Utf8Value <span class=\"token function\">v8Str</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  Isolate<span class=\"token operator\">*</span> isolate <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span><span class=\"token function\">GetIsolate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  HandleScope <span class=\"token function\">scope</span><span class=\"token punctuation\">(</span>isolate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  std<span class=\"token double-colon punctuation\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token operator\">*</span>v8Str <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token double-colon punctuation\">::</span>endl<span class=\"token punctuation\">;</span>\n  args<span class=\"token punctuation\">.</span><span class=\"token function\">GetReturnValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">NewFromUtf8</span><span class=\"token punctuation\">(</span>isolate<span class=\"token punctuation\">,</span> <span class=\"token string\">\"from yeanzhi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">strLength</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> FunctionCallbackInfo<span class=\"token operator\">&lt;</span>Value<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  v8<span class=\"token double-colon punctuation\">::</span>String<span class=\"token double-colon punctuation\">::</span>Utf8Value <span class=\"token function\">v8Str</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  Isolate<span class=\"token operator\">*</span> isolate <span class=\"token operator\">=</span> args<span class=\"token punctuation\">.</span><span class=\"token function\">GetIsolate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  HandleScope <span class=\"token function\">scope</span><span class=\"token punctuation\">(</span>isolate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">int</span> length <span class=\"token operator\">=</span> <span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>v8Str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  args<span class=\"token punctuation\">.</span><span class=\"token function\">GetReturnValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span>isolate<span class=\"token punctuation\">,</span> length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">loadjs</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> FunctionCallbackInfo<span class=\"token operator\">&lt;</span>Value<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  v8<span class=\"token double-colon punctuation\">::</span>String<span class=\"token double-colon punctuation\">::</span>Utf8Value <span class=\"token function\">v8Str</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  std<span class=\"token double-colon punctuation\">::</span>ifstream <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>v8Str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  std<span class=\"token double-colon punctuation\">::</span>stringbuf buf<span class=\"token punctuation\">;</span>\n  f <span class=\"token operator\">>></span> buf<span class=\"token punctuation\">;</span>\n  Local<span class=\"token operator\">&lt;</span>Value<span class=\"token operator\">></span> result <span class=\"token operator\">=</span> <span class=\"token class-name\">Script</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Compile</span><span class=\"token punctuation\">(</span>v8<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">String</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">NewFromUtf8</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span><span class=\"token function\">GetIsolate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">.</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Convert the result to an UTF8 string and print it.</span>\n  String<span class=\"token double-colon punctuation\">::</span>Utf8Value <span class=\"token function\">utf8</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n%s\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>utf8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Initialize V8.</span>\n  <span class=\"token class-name\">V8</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">InitializeICU</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  Platform<span class=\"token operator\">*</span> platform <span class=\"token operator\">=</span> platform<span class=\"token double-colon punctuation\">::</span><span class=\"token function\">CreateDefaultPlatform</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">V8</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">InitializePlatform</span><span class=\"token punctuation\">(</span>platform<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">V8</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Initialize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Create a new Isolate and make it the current one.</span>\n  Isolate<span class=\"token operator\">*</span> isolate <span class=\"token operator\">=</span> <span class=\"token class-name\">Isolate</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">{</span>\n    Isolate<span class=\"token double-colon punctuation\">::</span>Scope <span class=\"token function\">isolate_scope</span><span class=\"token punctuation\">(</span>isolate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Create a stack-allocated handle scope.</span>\n    HandleScope <span class=\"token function\">handle_scope</span><span class=\"token punctuation\">(</span>isolate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">auto</span> global <span class=\"token operator\">=</span> v8<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">ObjectTemplate</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span>isolate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    global<span class=\"token operator\">-></span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span>v8<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">String</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">NewFromUtf8</span><span class=\"token punctuation\">(</span>isolate<span class=\"token punctuation\">,</span> <span class=\"token string\">\"printjs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">FunctionTemplate</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span>isolate<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>printjs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    global<span class=\"token operator\">-></span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span>v8<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">String</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">NewFromUtf8</span><span class=\"token punctuation\">(</span>isolate<span class=\"token punctuation\">,</span> <span class=\"token string\">\"loadjs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">FunctionTemplate</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span>isolate<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>loadjs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    global<span class=\"token operator\">-></span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span>v8<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">String</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">NewFromUtf8</span><span class=\"token punctuation\">(</span>isolate<span class=\"token punctuation\">,</span> <span class=\"token string\">\"strLength\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">FunctionTemplate</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span>isolate<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>strLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Create a new context.</span>\n    Local<span class=\"token operator\">&lt;</span>Context<span class=\"token operator\">></span> context <span class=\"token operator\">=</span> <span class=\"token class-name\">Context</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span>isolate<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> global<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Enter the context for compiling and running the hello world script.</span>\n    Context<span class=\"token double-colon punctuation\">::</span>Scope <span class=\"token function\">context_scope</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Create a string containing the JavaScript source code.</span>\n    Local<span class=\"token operator\">&lt;</span>String<span class=\"token operator\">></span> source <span class=\"token operator\">=</span> <span class=\"token class-name\">String</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">NewFromUtf8</span><span class=\"token punctuation\">(</span>isolate<span class=\"token punctuation\">,</span> <span class=\"token string\">\"loadjs('app.js')\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Compile the source code.</span>\n    Local<span class=\"token operator\">&lt;</span>Script<span class=\"token operator\">></span> script <span class=\"token operator\">=</span> <span class=\"token class-name\">Script</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Compile</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Run the script to get the result.</span>\n    Local<span class=\"token operator\">&lt;</span>Value<span class=\"token operator\">></span> result <span class=\"token operator\">=</span> script<span class=\"token operator\">-></span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// Convert the result to an UTF8 string and print it.</span>\n    String<span class=\"token double-colon punctuation\">::</span>Utf8Value <span class=\"token function\">utf8</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n%s\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>utf8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Dispose the isolate and tear down V8.</span>\n  isolate<span class=\"token operator\">-></span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">V8</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">V8</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">ShutdownPlatform</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">delete</span> platform<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>这端代码最核心的功能就是下面这段</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\"><span class=\"token keyword\">auto</span> global <span class=\"token operator\">=</span> v8<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">ObjectTemplate</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span>isolate<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nglobal<span class=\"token operator\">-></span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span>v8<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">String</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">NewFromUtf8</span><span class=\"token punctuation\">(</span>isolate<span class=\"token punctuation\">,</span> <span class=\"token string\">\"printjs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> v8<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">FunctionTemplate</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span>isolate<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>printjs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nglobal<span class=\"token operator\">-></span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span>v8<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">String</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">NewFromUtf8</span><span class=\"token punctuation\">(</span>isolate<span class=\"token punctuation\">,</span> <span class=\"token string\">\"loadjs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> v8<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">FunctionTemplate</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span>isolate<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>loadjs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nglobal<span class=\"token operator\">-></span><span class=\"token function\">Set</span><span class=\"token punctuation\">(</span>v8<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">String</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">NewFromUtf8</span><span class=\"token punctuation\">(</span>isolate<span class=\"token punctuation\">,</span> <span class=\"token string\">\"strLength\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> v8<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">FunctionTemplate</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span>isolate<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>strLength<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Create a new context.</span>\nLocal<span class=\"token operator\">&lt;</span>Context<span class=\"token operator\">></span> context <span class=\"token operator\">=</span> <span class=\"token class-name\">Context</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span>isolate<span class=\"token punctuation\">,</span> <span class=\"token keyword\">nullptr</span><span class=\"token punctuation\">,</span> global<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>众所周知，js 有一个全局空间的概念，这里我们创建了三个函数 printjs，loadjs，strLength，并将他们绑定到全局空间中，这样我在创建好的 app.js 中就可以直接使用这三个函数</p>\n<p>然后看这段代码</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\"><span class=\"token comment\">// Enter the context for compiling and running the hello world script.</span>\nContext<span class=\"token double-colon punctuation\">::</span>Scope <span class=\"token function\">context_scope</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Create a string containing the JavaScript source code.</span>\nLocal<span class=\"token operator\">&lt;</span>String<span class=\"token operator\">></span> source <span class=\"token operator\">=</span> <span class=\"token class-name\">String</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">NewFromUtf8</span><span class=\"token punctuation\">(</span>isolate<span class=\"token punctuation\">,</span> <span class=\"token string\">\"loadjs('app.js')\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Compile the source code.</span>\nLocal<span class=\"token operator\">&lt;</span>Script<span class=\"token operator\">></span> script <span class=\"token operator\">=</span> <span class=\"token class-name\">Script</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Compile</span><span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Run the script to get the result.</span>\nLocal<span class=\"token operator\">&lt;</span>Value<span class=\"token operator\">></span> result <span class=\"token operator\">=</span> script<span class=\"token operator\">-></span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>这里我们做了两件事，一个是通过 loadjs 加载了 app.js 这个文件，然后编译这段代码，去执行他，下面是 app.js 的源码</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token function\">printjs</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">printjs</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"from yeanzhi\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> patt1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"e\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> myDate <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\narr<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2fjdsaf\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n  j <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">var</span> res <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> j\n<span class=\"token function\">printjs</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">==</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">printjs</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">printjs</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">printjs</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"yeanzhi is supermen\"</span><span class=\"token punctuation\">)</span>\n  i<span class=\"token operator\">++</span>\n  <span class=\"token function\">printjs</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">printjs</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"==============>>>>>>>>>>>>>\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">printjs</span><span class=\"token punctuation\">(</span><span class=\"token function\">strLength</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"yeanzhi is supermen\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">printjs</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">printjs</span><span class=\"token punctuation\">(</span>myDate<span class=\"token punctuation\">.</span><span class=\"token function\">getTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1 id=\"loadjs\" style=\"position:relative;\">loadJS<a href=\"#loadjs\" aria-label=\"loadjs permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h1>\n<p>loadjs 中做了几件事情，首先拿到需要执行文件的内容，然后编译，执行，输出结果，下面是源码</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-cpp line-numbers\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> <span class=\"token function\">loadjs</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> FunctionCallbackInfo<span class=\"token operator\">&lt;</span>Value<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    v8<span class=\"token double-colon punctuation\">::</span>String<span class=\"token double-colon punctuation\">::</span>Utf8Value <span class=\"token function\">v8Str</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    std<span class=\"token double-colon punctuation\">::</span>ifstream <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>v8Str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    std<span class=\"token double-colon punctuation\">::</span>stringbuf buf<span class=\"token punctuation\">;</span>\n    f<span class=\"token operator\">>></span><span class=\"token operator\">&amp;</span>buf<span class=\"token punctuation\">;</span>\n    Local<span class=\"token operator\">&lt;</span>Value<span class=\"token operator\">></span> result <span class=\"token operator\">=</span>           <span class=\"token class-name\">Script</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">Compile</span><span class=\"token punctuation\">(</span>v8<span class=\"token double-colon punctuation\">::</span><span class=\"token class-name\">String</span><span class=\"token double-colon punctuation\">::</span><span class=\"token function\">NewFromUtf8</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">.</span><span class=\"token function\">GetIsolate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>     buf<span class=\"token punctuation\">.</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-></span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Convert the result to an UTF8 string and print it.</span>\n    String<span class=\"token double-colon punctuation\">::</span>Utf8Value <span class=\"token function\">utf8</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n%s\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>utf8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h1 id=\"运行\" style=\"position:relative;\">运行<a href=\"#%E8%BF%90%E8%A1%8C\" aria-label=\"运行 permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h1>\n<p>运行 helloV8 这个 target，会发现在 js 文件已经成功的执行</p>\n<p><img src=\"https://xming-images.oss-cn-beijing.aliyuncs.com/md/1582807415259-1700be3d40e24497d397af8a5da9f071.png\" alt=\"\"></p>\n<p>总结，v8 就是一个解析器，通过加载 js 文件的内容，在 v8 中编译后就可以执行 js 文件。node 就是基于这个做的，我们会在 node 的 Projects 里面发现 v8 的项目，和我们刚才下载的是完全一致的。</p>\n<p><img src=\"https://xming-images.oss-cn-beijing.aliyuncs.com/md/1582807420447-53e5bcfde6803fe887aa6130999858e6.png\" alt=\"\"></p>\n<p>v8 在 node 0.10~0.11 这段时间中进行了一次惨无人道的升级，波及相当多的 api，导致网上能搜索到得大部分内容都不再适用了，如果想了解更多 v8 地内容，可以去这里获得<a href=\"https://developers.google.com/v8/embed\" title=\"https://developers.google.com/v8\">https://developers.google.com/v8</a>，如果以后有时间，我会在写一些 nodejs 的源码分析。</p>","fields":{"slug":"/post/2015/v8-nodejs/"},"tableOfContents":"<ul>\n<li><a href=\"#%E5%AE%89%E8%A3%85%E4%BE%9D%E8%B5%96%E5%B7%A5%E5%85%B7\">安装依赖工具</a></li>\n<li><a href=\"#%E5%AE%89%E8%A3%85-v8\">安装 v8</a></li>\n<li><a href=\"#%E7%94%9F%E6%88%90-xcode-%E5%B7%A5%E7%A8%8B\">生成 xcode 工程</a></li>\n<li><a href=\"#%E5%88%B6%E4%BD%9C%E7%AE%80%E5%8D%95%E5%9C%B0-log-%E5%87%BD%E6%95%B0\">制作简单地 log 函数</a></li>\n<li><a href=\"#loadjs\">loadJS</a></li>\n<li><a href=\"#%E8%BF%90%E8%A1%8C\">运行</a></li>\n</ul>","frontmatter":{"title":"使用v8与js做交互，理解node基本原理","date":"April 28, 2015","description":null},"wordCount":{"words":282,"paragraphs":33,"sentences":33}}},"pageContext":{"slug":"/post/2015/v8-nodejs/","previous":null,"next":{"fields":{"slug":"/post/2015/hello-world/"},"frontmatter":{"title":"Hello World","tags":null,"description":null}}}},"staticQueryHashes":["1006016363","324394502","63159454"],"slicesMap":{}}