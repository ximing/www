{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/post/2019/inversifyjs/","result":{"data":{"site":{"siteMetadata":{"title":"一席之地","author":"xi ming"}},"markdownRemark":{"id":"061b36ba-7c4f-5fb2-a1fc-f937f8588344","excerpt":"container scope 这个 scope 的wiki没有太讲清楚， request_scope.test 这个单测基本说的就很明白了 TransientScope 所有的都是新的，这个很好理解 SingletonScope 顾名思义单例模式，所有通过容器获取到的实例都是同一个 RequestScope…","html":"<h4 id=\"container\" style=\"position:relative;\">container<a href=\"#container\" aria-label=\"container permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h4>\n<h4 id=\"scope\" style=\"position:relative;\">scope<a href=\"#scope\" aria-label=\"scope permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h4>\n<p>这个 <a href=\"https://github.com/inversify/InversifyJS/blob/master/wiki/scope.md\">scope</a> 的wiki没有太讲清楚， <a href=\"https://github.com/inversify/InversifyJS/blob/master/test/features/request_scope.test.ts\">request_scope.test</a> 这个单测基本说的就很明白了</p>\n<p>TransientScope 所有的都是新的，这个很好理解</p>\n<p>SingletonScope 顾名思义单例模式，所有通过容器获取到的实例都是同一个</p>\n<p>RequestScope   同一个对象里面的是同一个(除非用tag或者targetName限制住)</p>\n<h4 id=\"targetname-和-tagged\" style=\"position:relative;\">targetName 和 tagged<a href=\"#targetname-%E5%92%8C-tagged\" aria-label=\"targetname 和 tagged permalink\" class=\"custom-class after\"><svg t=\"1685947446267\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4780\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"25\" height=\"25\"><path d=\"M282.453333 676.693333m-181.333333 0a181.333333 181.333333 0 1 0 362.666667 0 181.333333 181.333333 0 1 0-362.666667 0Z\" fill=\"#FFCA5F\" p-id=\"4781\"></path><path d=\"M570.453333 111.36m-42.666666 0a42.666667 42.666667 0 1 0 85.333333 0 42.666667 42.666667 0 1 0-85.333333 0Z\" fill=\"#FFCA5F\" p-id=\"4782\"></path><path d=\"M388.053333 866.346667A208 208 0 0 1 241.066667 512l106.666666-106.666667 45.226667 45.226667-106.666667 106.666667A144 144 0 1 0 490.666667 760.32l107.733333-106.666667 45.226667 45.226667-107.733334 106.666667a207.146667 207.146667 0 0 1-147.84 60.8zM723.413333 617.173333l-45.226666-45.226666 100.906666-100.906667A144 144 0 1 0 576 267.52l-100.906667 100.906667-45.226666-45.44 100.906666-100.906667A208 208 0 0 1 824.32 516.266667z\" fill=\"#5C1CF7\" p-id=\"4783\"></path><path d=\"M442.794667 558.506667l134.570666-134.549334 45.248 45.269334-134.549333 134.549333z\" fill=\"#5C1CF7\" p-id=\"4784\"></path></svg></a></h4>\n<p>targetName不能传参，tagged注解的时候可以加参数</p>","fields":{"slug":"/post/2019/inversifyjs/"},"tableOfContents":"<ul>\n<li><a href=\"#container\">container</a></li>\n<li><a href=\"#scope\">scope</a></li>\n<li><a href=\"#targetname-%E5%92%8C-tagged\">targetName 和 tagged</a></li>\n</ul>","frontmatter":{"title":"inversify学习","date":"June 01, 2019","description":null},"wordCount":{"words":21,"paragraphs":8,"sentences":8}}},"pageContext":{"slug":"/post/2019/inversifyjs/","previous":{"fields":{"slug":"/post/2019/keyof 和 typeof 类型操作的操作符/"},"frontmatter":{"title":"国际化-RTL","tags":["typescript"],"description":null}},"next":{"fields":{"slug":"/post/2019/typescript/"},"frontmatter":{"title":"typescript高级用法梳理","tags":null,"description":null}}}},"staticQueryHashes":["1006016363","324394502","63159454"],"slicesMap":{}}